{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","LENGTH","sort","good1","good2","length","ALPABET","localeCompare","reverse","console","log","App","state","NONE","sortAlphabet","setState","sortByLength","getReverse","getReset","this","className","type","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,+EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAKJ,EAASO,OACZD,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,OAASD,EAAMC,UACzD,MAEF,KAAKX,EAASY,QACZN,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,cAAcH,MAe5D,OARIL,GACFC,EAAaQ,UAKfC,QAAQC,IAAIZ,EAAUC,GAEfC,G,SAxCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAiDE,IAAMiB,EAAb,4MACEC,MAAQ,CACNd,SAAUJ,EAASmB,KACnBd,YAAY,GAHhB,EAMEe,aAAe,kBAAM,EAAKC,UAAS,iBAAO,CACxCjB,SAAUJ,EAASY,aAPvB,EAUEU,aAAe,kBAAM,EAAKD,UAAS,iBAAO,CACxCjB,SAAUJ,EAASO,YAXvB,EAcEgB,WAAa,kBAAM,EAAKF,UAAS,SAACH,GAAD,MAAmB,CAClDb,YAAaa,EAAMb,gBAfvB,EAkBEmB,SAAW,kBAAM,EAAKH,UAAS,iBAAO,CACpCjB,SAAUJ,EAASmB,KACnBd,YAAY,OApBhB,4CAuBE,WACE,MAAiCoB,KAAKP,MAA9Bb,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SAElBgB,EAIEK,KAJFL,aACAE,EAGEG,KAHFH,aACAC,EAEEE,KAFFF,WACAC,EACEC,KADFD,SAGF,OACE,sBAAKE,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEtB,IAAaJ,EAASY,QAClB,iBACA,0BAENgB,QAASR,EAPX,iCAYA,wBACEO,KAAK,SACLD,UACEtB,IAAaJ,EAASO,OAClB,oBACA,6BAENqB,QAASN,EAPX,4BAYA,wBACEK,KAAK,SACLD,WACiB,IAAfrB,EACI,oBACA,6BAENuB,QAASL,EAPX,sBAYEnB,IAAaJ,EAASmB,MAAQd,IAC9B,wBACEsB,KAAK,SACLD,UAAU,4BACVE,QAASJ,EAHX,sBAUJ,6BACE,6BACGtB,EAAkBD,EAAiBwB,KAAKP,OAAOW,KAAI,SAAAC,GAAI,OACtD,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,iBArFvB,GAAyBC,aC/DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3b2c4b48.chunk.js","sourcesContent":["import { Component, ReactNode } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n\n    case SortType.ALPABET:\n      visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  sortAlphabet = () => this.setState(() => ({\n    sortType: SortType.ALPABET,\n  }));\n\n  sortByLength = () => this.setState(() => ({\n    sortType: SortType.LENGTH,\n  }));\n\n  getReverse = () => this.setState((state: State) => ({\n    isReversed: !state.isReversed,\n  }));\n\n  getReset = () => this.setState(() => ({\n    sortType: SortType.NONE,\n    isReversed: false,\n  }));\n\n  render(): ReactNode {\n    const { isReversed, sortType } = this.state;\n    const {\n      sortAlphabet,\n      sortByLength,\n      getReverse,\n      getReset,\n    } = this;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={(\n              sortType === SortType.ALPABET\n                ? 'button is-info'\n                : 'button is-info is-light'\n            )}\n            onClick={sortAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={(\n              sortType === SortType.LENGTH\n                ? 'button is-success'\n                : 'button is-success is-light'\n            )}\n            onClick={sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={(\n              isReversed === true\n                ? 'button is-warning'\n                : 'button is-warning is-light'\n            )}\n            onClick={getReverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={getReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, this.state).map(good => (\n              <li key={good} data-cy=\"Good\">{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}