{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","LENGTH","sort","good1","good2","length","ALPABET","localeCompare","reverse","console","log","App","state","NONE","className","type","this","onClick","setState","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,+EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAKJ,EAASO,OACZD,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,OAASD,EAAMC,UACzD,MAEF,KAAKX,EAASY,QACZN,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,cAAcH,MAe5D,OARIL,GACFC,EAAaQ,UAKfC,QAAQC,IAAIZ,EAAUC,GAEfC,G,SAxCJN,K,YAAAA,E,mBAAAA,E,iBAAAA,M,KAiDE,IAAMiB,EAAb,4MACEC,MAAQ,CACNd,SAAUJ,EAASmB,KACnBd,YAAY,GAHhB,4CAME,WAAqB,IAAD,OAClB,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,KAAKJ,MAAMd,WAAaJ,EAASY,QAC7B,iBACA,0BAENW,QAAS,kBAAM,EAAKC,UAAS,iBAAO,CAClCpB,SAAUJ,EAASY,aARvB,iCAcA,wBACES,KAAK,SACLD,UACEE,KAAKJ,MAAMd,WAAaJ,EAASO,OAC7B,iBACA,0BAENgB,QAAS,kBAAM,EAAKC,UAAS,iBAAO,CAClCpB,SAAUJ,EAASO,YARvB,4BAcA,wBACEc,KAAK,SACLD,WAC4B,IAA1BE,KAAKJ,MAAMb,WACP,iBACA,0BAENkB,QAAS,kBAAM,EAAKC,UAAS,SAACN,GAAD,MAAmB,CAC9Cb,YAAaa,EAAMb,gBARvB,qBAcCiB,KAAKJ,MAAMd,WAAaJ,EAASmB,MAChC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAAM,EAAKC,UAAS,iBAAO,CAClCpB,SAAUJ,EAASmB,UAJvB,sBAYJ,6BACE,6BACGjB,EAAkBD,EAAiBqB,KAAKJ,OAAOO,KAAI,SAAAC,GAAI,OACtD,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,iBApEvB,GAAyBC,aC/DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9c377a8f.chunk.js","sourcesContent":["import { Component, ReactNode } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  ALPABET = 'alphabet',\n  LENGTH = 'length',\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n\n    case SortType.ALPABET:\n      visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  render(): ReactNode {\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={(\n              this.state.sortType === SortType.ALPABET\n                ? 'button is-info'\n                : 'button is-info is-light'\n            )}\n            onClick={() => this.setState(() => ({\n              sortType: SortType.ALPABET,\n            }))}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={(\n              this.state.sortType === SortType.LENGTH\n                ? 'button is-info'\n                : 'button is-info is-light'\n            )}\n            onClick={() => this.setState(() => ({\n              sortType: SortType.LENGTH,\n            }))}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={(\n              this.state.isReversed === true\n                ? 'button is-info'\n                : 'button is-info is-light'\n            )}\n            onClick={() => this.setState((state: State) => ({\n              isReversed: !state.isReversed,\n            }))}\n          >\n            Reverse\n          </button>\n\n          {this.state.sortType !== SortType.NONE && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => this.setState(() => ({\n                sortType: SortType.NONE,\n              }))}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, this.state).map(good => (\n              <li key={good} data-cy=\"Good\">{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}